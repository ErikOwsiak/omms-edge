#!/usr/bin/env python3

import configparser as _cp
import os.path, time, setproctitle
# -- sys imports --
from core.utils import sysUtils as utils
from mqtt.mqttMeterReaderV1 import mqttMeterReaderV1
from core.redisOps import redisOps
from core.debug import debug


system_cp: _cp.ConfigParser = _cp.ConfigParser()
loaded: [] = system_cp.read("conf/system.ini")
if len(loaded) == 0:
   print("NoLoadedConfFiles")
   exit(1)

mqtt_redis_cp: _cp.ConfigParser = _cp.ConfigParser()
loaded: [] = mqtt_redis_cp.read("conf/mqtt_redis_bot.ini")
if len(loaded) == 0:
   print("NoLoadedConfFiles")
   exit(1)

# -- red ops --
IS_DEBUG: bool = debug.is_dev_box()
if IS_DEBUG:
   redops: redisOps = redisOps(mqtt_redis_cp, "DEV_REDIS_CONN")
else:
   redops: redisOps = redisOps(mqtt_redis_cp)


"""
   load mqtt meter_xml_nodes
"""
XML_METER_FILE = "conf/mqtt_meters.xml"
if not os.path.exists(XML_METER_FILE):
   raise FileNotFoundError(XML_METER_FILE)
# -- -- -- -- -- -- -- --
mqttReaderV1: mqttMeterReaderV1 = \
   mqttMeterReaderV1(XML_METER_FILE, mqtt_redis_cp, system_cp, redops)
# -- -- -- -- -- -- -- --
if not mqttReaderV1.load_xml_conf():
   exit(1)

"""
   init mqtt code
"""
if mqttReaderV1.mqtt_init() != 0:
   exit(2)

"""
   start reader 
"""
if not mqttReaderV1.start():
   exit(1)

# -- main loop --
LOOP_SLEEP_SECS: float = float(mqtt_redis_cp["TIMING"]["LOOP_SLEEP_SECS"])

def main():
   setproctitle.setproctitle("mqttRedisBot")
   diag_tag: str = mqtt_redis_cp["SYSINFO"]["DIAG_TAG"]
   diag_tag = utils.diag_tag_prefix(diag_tag)
   while True:
      print("[ mqtt_redis_bot: main ]")
      if mqttReaderV1.last_report:
         msg = "mqttReaderV1 TRUE"
         dct: {} = {"dts_utc": utils.dts_utc(), "msg": msg}
         mqttReaderV1.redops.update_diag_tag(diag_tag=diag_tag, mapdct=dct, restart=False)
      # -- -- -- --
      time.sleep(LOOP_SLEEP_SECS)


# -- start here --
if __name__ == "__main__":
   main()
